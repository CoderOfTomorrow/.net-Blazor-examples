
<div class="calculator card">


    <h2 class="calculator-screen z-depth-1">@ts.ToString(@"hh\:mm\:ss")</h2>
    <button @onclick=Start>Start</button>
    <button @onclick=Record>Record</button>
    <button @onclick=Clear>Clear</button>


    @if (list.Count > 0)
    {
        <ul class="list-group" style="overflow:auto; height:190px; width:400px;">
            @foreach (var data in list)
            {
                <li class="list-group-item">@data.ToString(@"hh\:mm\:ss")</li>
            }
        </ul>
    }
</div>

@code{

    protected Stopwatch start = new Stopwatch();
    List<TimeSpan> list = new List<TimeSpan>();
    bool IsTimerStarted;
    TimeSpan ts;

    public void Start()
    {
        IsTimerStarted = true;
        start.Start();
        RunTimerAsync();
    }

    public void Record()
    {
        list.Add(ts);
    }

    public void Stop()
    {
        start.Stop();
        ts = start.Elapsed;
    }

    public void Clear()
    {
        start = new Stopwatch();
        ts = new TimeSpan();
        list = new List<TimeSpan>();
        IsTimerStarted = false;
    }

    public async void RunTimerAsync()
    {
        await Timer();
    }

    private async Task Timer()
    {
        while (IsTimerStarted)
        {
            await Task.Delay(1000);
            ts = start.Elapsed;
            StateHasChanged();
        }
    }
}
